"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[7610],{9838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"api","title":"API Reference","description":"<ButtonLink","source":"@site/versioned_docs/version-v23.09/api.mdx","sourceDirName":".","slug":"/api","permalink":"/docs/v23.09/api","draft":false,"unlisted":false,"editUrl":"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/master/versioned_docs/version-v23.09/api.mdx","tags":[],"version":"v23.09","sidebarPosition":99,"frontMatter":{"title":"API Reference","sidebar_position":99},"sidebar":"docs","previous":{"title":"Running Tests","permalink":"/docs/v23.09/tests"}}');var r=t(4848),i=t(8453),o=t(5167),a=t(4070),c=t(263);const l={title:"API Reference",sidebar_position:99},d="API Reference",p={},u=[];function h(e){const n={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n","\n",(0,r.jsx)(o.A,{text:"Go to Doxygen API reference",link:"pathname:///api-docs/"+(0,a.ir)().label.toLowerCase()}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"PcapPlusPlus consists of 3 libraries:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Packet++"})," - a library for parsing, creating and editing network packets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pcap++"})," - a library for intercepting and sending packets, providing network and NIC info, stats, etc. It is actually a C++ wrapper for packet capturing engines such as libpcap, WinPcap, Npcap, DPDK and PF_RING"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Common++"})," - a library with some common code utilities used by both Packet++ and Pcap++"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The dependency model between the libraries is as follows:"}),"\n",(0,r.jsx)(c.lj,{srcLight:"/api-docs/libraries-light.svg",srcDark:"/api-docs/libraries-dark.svg"}),"\n",(0,r.jsxs)(n.p,{children:["That means, you can use ",(0,r.jsx)(n.strong,{children:"Common++"})," separately from the other libraries, and you can also use ",(0,r.jsx)(n.strong,{children:"Packet++"})," without ",(0,r.jsx)(n.strong,{children:"Pcap++"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["All of PcapPlusPlus APIs including classes for all of these libraries, files, data structures, etc. are documented in details using ",(0,r.jsx)(n.a,{href:"http://www.doxygen.nl/",children:"Doxygen"}),"."]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},5167:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4164),r=t(8774);const i="DocsButton_Wv58";var o=t(4848);const a=function({text:e,link:n}){return(0,o.jsx)(r.A,{className:(0,s.A)("button button--lg",i),to:n,children:e})}},263:(e,n,t)=>{t.d(n,{cJ:()=>o,lj:()=>a});t(6540);var s=t(6025),r=t(1122),i=t(4848);function o({src:e,width:n,title:t}){return(0,i.jsx)("img",{src:(0,s.Ay)(e),width:n,title:t,alt:t})}function a({srcLight:e,srcDark:n,width:t,title:o}){return(0,i.jsx)(r.A,{sources:{light:(0,s.Ay)(e),dark:(0,s.Ay)(n)},width:t,title:o})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);