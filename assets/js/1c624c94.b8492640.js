"use strict";(self.webpackChunkpcapplusplus_github_io=self.webpackChunkpcapplusplus_github_io||[]).push([[2819],{123:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"install/linux","title":"Build on Linux","description":"Prerequisites","source":"@site/versioned_docs/version-v21.11/install/linux.mdx","sourceDirName":"install","slug":"/install/linux","permalink":"/docs/v21.11/install/linux","draft":false,"unlisted":false,"editUrl":"https://github.com/PcapPlusPlus/pcapplusplus.github.io/edit/master/versioned_docs/version-v21.11/install/linux.mdx","tags":[],"version":"v21.11","frontMatter":{"title":"Build on Linux"},"sidebar":"docs","previous":{"title":"Setting Up PcapPlusPlus","permalink":"/docs/v21.11/install"},"next":{"title":"Build on MacOS","permalink":"/docs/v21.11/install/macos"}}');var l=i(4848),t=i(8453);const r={title:"Build on Linux"},d="Build From Source on Linux",c={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Wizard mode",id:"wizard-mode",level:3},{value:"Command-line switches mode",id:"command-line-switches-mode",level:3},{value:"Build the code",id:"build-the-code",level:2},{value:"Installation",id:"installation",level:2},{value:"Running tests",id:"running-tests",level:2},{value:"Cross-compilation or build for different architectures",id:"cross-compilation-or-build-for-different-architectures",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"build-from-source-on-linux",children:"Build From Source on Linux"})}),"\n",(0,l.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(s.p,{children:"In order to compile PcapPlusPlus on Linux please make sure you have the following components installed:"}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"libpcap developers pack"})," - contains the libpcap library PcapPlusPlus is linking with and relevant the header files. You can download it from ",(0,l.jsx)(s.a,{href:"http://www.tcpdump.org/#latest-release",children:"http://www.tcpdump.org/#latest-release"})," or through the standard Linux package managers such as ",(0,l.jsx)(s.code,{children:"apt-get"})," or ",(0,l.jsx)(s.code,{children:"yum"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo apt-get install libpcap-dev\n"})}),"\n",(0,l.jsx)(s.p,{children:"or:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo yum install libpcap-devel\n"})}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"libstdc++-static"})," package. If it's not already installed you can install it using ",(0,l.jsx)(s.code,{children:"apt-get"})," or ",(0,l.jsx)(s.code,{children:"yum"})]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"OPTIONAL"})," - download and install ",(0,l.jsx)(s.a,{href:"https://github.com/facebook/zstd/releases/latest",children:"Zstd"})," if you wish to enable ",(0,l.jsx)(s.a,{href:"../features#readingwriting-pcapng-files-with-compression",children:"PCAPNG streaming compression support"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsx)(s.p,{children:"Run the configuration script from PcapPlusPlus main directory:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"./configure-linux.sh\n"})}),"\n",(0,l.jsx)(s.p,{children:"Ths script has two modes of operation:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Wizard mode - the script will walk you through the configuration parameters to provide"}),"\n",(0,l.jsx)(s.li,{children:"Params mode - provide the different parameters using command-line switches"}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"In general there are several types of configuration:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"With libpcap only"}),"\n",(0,l.jsx)(s.li,{children:"With DPDK"}),"\n",(0,l.jsx)(s.li,{children:"With PF_RING"}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Let's cover the different options. We'll begin with the wizard mode and later cover the params mode."}),"\n",(0,l.jsx)(s.h3,{id:"wizard-mode",children:"Wizard mode"}),"\n",(0,l.jsx)(s.p,{children:"This mode is pretty much self explanatory and the wizard will guide you through the parameters you need to provide:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh\n\n****************************************\nPcapPlusPlus Linux configuration script\n****************************************\n\nNumber of arguments: 0\n\nCompile PcapPlusPlus with PF_RING? y\nEnter PF_RING source path: /home/seladb/PF_RING\nCompile PcapPlusPlus with DPDK? y\nEnter DPDK source path: /home/seladb/dpdk-18.11\nPcapPlusPlus configuration is complete. Files created (or modified): mk/platform.mk, mk/PcapPlusPlus.mk, mk/install.sh, mk/uninstall.sh\n"})}),"\n",(0,l.jsx)(s.h3,{id:"command-line-switches-mode",children:"Command-line switches mode"}),"\n",(0,l.jsxs)(s.p,{children:["You an view all available switches by running ",(0,l.jsx)(s.code,{children:"./configure-linux.sh --help"})," or ",(0,l.jsx)(s.code,{children:"./configure-linux.sh -h"}),":"]}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Option"}),(0,l.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(s.tbody,{children:[(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--default"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["use the default configuration. This assumes ",(0,l.jsx)(s.code,{children:"libpcap-dev"})," is installed"]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--dpdk"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["setup PcapPlusPlus with DPDK. When using this switch you must also set ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--dpdk-home"})})]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--dpdk-home"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["set DPDK home directory. Use only when ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--dpdk"})})," is set"]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--pf-ring"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["setup PcapPlusPlus with PF_RING. When using this switch you must also set ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--pf-ring-home"})})]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--pf-ring-home"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["sets PF_RING home directory. Use only when ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--pf-ring"})})," is set"]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--use-immediate-mode"})})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"use libpcap immediate mode which enables getting packets as fast as possible (supported on libpcap>=1.5)"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--set-direction-enabled"})})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"set direction for capturing incoming or outgoing packets (supported on libpcap>=0.9.1)"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--install-dir"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["set a custom installation directory. Default is ",(0,l.jsx)(s.code,{children:"/usr/local"})]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--libpcap-include-dir"})})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"libpcap header files directory. This parameter is optional and if omitted PcapPlusPlus will look for the header files in the default include paths"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--libpcap-lib-dir"})})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"libpcap pre compiled lib directory. This parameter is optional and if omitted PcapPlusPlus will look for the lib file in the default lib paths"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--use-zstd"})})}),(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:["use ",(0,l.jsx)(s.a,{href:"../features#readingwriting-pcapng-files-with-compression",children:"Zstd for PCAPNG streaming compression"}),". This parameter is optional"]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{style:{textAlign:"left"},children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--musl"})})}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"Musl base destination platform: i.e. Alpine. This parameter is optional"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"-h"})}),", ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--help"})})]}),(0,l.jsx)(s.td,{style:{textAlign:"left"},children:"displays a help message and exits. No further actions are performed"})]})]})]}),"\n",(0,l.jsx)(s.p,{children:"Here are a few examples:"}),"\n",(0,l.jsx)(s.p,{children:"Default configuration:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --default\n"})}),"\n",(0,l.jsx)(s.p,{children:"Configure PcapPlusPlus with DPDK:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --dpdk --dpdk-home /home/myuser/dpdk-18.11\n"})}),"\n",(0,l.jsx)(s.p,{children:"Configure PcapPlusPlus with PF_RING:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --pf-ring --pf-ring-home /home/myuser/PF_RING\n"})}),"\n",(0,l.jsx)(s.p,{children:"Configure PcapPlusPlus with libpcap's immediate mode:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --use-immediate-mode\n"})}),"\n",(0,l.jsx)(s.p,{children:"Configure PcapPlusPlus with libpcap's set direction:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --set-direction-enabled\n"})}),"\n",(0,l.jsx)(s.p,{children:"Provide non-standard paths for libpcap header and library files:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --libpcap-include-dir /home/myuser/my-libpcap/include --libpcap-lib-dir /home/myuser/my-libpcap/lib\n"})}),"\n",(0,l.jsx)(s.p,{children:"Provide a custom installation directory:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --install-dir /home/myuser/my-install-dir\n"})}),"\n",(0,l.jsx)(s.p,{children:"Use Zstd for pcapng compression:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"./configure-linux.sh --use-zstd\n"})}),"\n",(0,l.jsx)(s.h2,{id:"build-the-code",children:"Build the code"}),"\n",(0,l.jsx)(s.p,{children:"After running the config script, you're can safely build the code:"}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsxs)(s.li,{children:["Run ",(0,l.jsx)(s.code,{children:"make"})," or ",(0,l.jsx)(s.code,{children:"make all"})," from PcapPlusPlus main directory"]}),"\n",(0,l.jsx)(s.li,{children:"This should compile all libraries, unit-tests and examples"}),"\n",(0,l.jsxs)(s.li,{children:["To build the libraries only (without the unit-tests and examples) run ",(0,l.jsx)(s.code,{children:"make libs"})," instead of ",(0,l.jsx)(s.code,{children:"make all"})]}),"\n",(0,l.jsxs)(s.li,{children:["After compilation you can find the libraries, examples, header files and helpful makefiles under the ",(0,l.jsx)(s.code,{children:"Dist"})," directory"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(s.p,{children:"After build is complete you can run the installation script which will copy the library and header files to the installation directory:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"sudo make install\n"})}),"\n",(0,l.jsxs)(s.p,{children:["The default installation directory is ",(0,l.jsx)(s.code,{children:"/usr/local"})," which means the header files will be copied to ",(0,l.jsx)(s.code,{children:"/usr/local/include/pcapplusplus"})," and the library files will be copied to ",(0,l.jsx)(s.code,{children:"/usr/local/lib"}),"."]}),"\n",(0,l.jsxs)(s.p,{children:["You can change the installation directory by using the ",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"--install-dir"})})," switch in the configuration script."]}),"\n",(0,l.jsx)(s.h2,{id:"running-tests",children:"Running tests"}),"\n",(0,l.jsxs)(s.p,{children:["PcapPlusPlus contains a set of test-cases you can run to make sure that everything works correctly on your system. ",(0,l.jsx)(s.a,{href:"../tests",children:"This guide"})," contains detailed instructions on how to run them."]}),"\n",(0,l.jsx)(s.h2,{id:"cross-compilation-or-build-for-different-architectures",children:"Cross-compilation or build for different architectures"}),"\n",(0,l.jsxs)(s.p,{children:["The default architecture that is tested in the CI is ",(0,l.jsx)(s.code,{children:"x86-64"}),". However it's possible to build PcapPlusPlus for other architectures such as ",(0,l.jsx)(s.code,{children:"ARM"}),", ",(0,l.jsx)(s.code,{children:"AArch64"})," (Arm64) or others.\nIn most cases the only difference is the gcc/g++ compiler used in the build process.\nIn cross-compilation the compiler may reside in a different folder and may not be the default gcc/g++ compiler installed on the machine."]}),"\n",(0,l.jsxs)(s.p,{children:["There is an easy way to use a different gcc/g++ compiler. Let's take an example of cross-compilation to ",(0,l.jsx)(s.code,{children:"AArch64"})," where gcc/g++ resides in\n",(0,l.jsx)(s.code,{children:"/usr/bin/"}),":"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:"export CXX=/usr/bin/aarch64-linux-gnu-g++\nexport CC=/usr/bin/aarch64-linux-gnu-gcc\n./configure-linux.sh --default\nmake\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>d});var n=i(6540);const l={},t=n.createContext(l);function r(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);